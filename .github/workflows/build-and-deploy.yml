name: Build and Deploy backend

on:
  # If: Manual trigger
  # Do: Build ':acceptance'
  workflow_dispatch:
    # If: Manual trigger & set to true
    # Do: build ':latest'
    inputs:
      perform_deploy:
        required: true
        type: boolean
        default: false
        description: 'Deploy to production'

  push:
    branches:
      # If: Push to develop
      # Do: Build ':testing'
      - develop
      # If: Push to main
      # Do: Build ':acceptance'
      - main

  pull_request:
    branches:
      # If: Pull request to develop
      # Do: Build ':pr-<id>'
      - develop

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: ${{ github.event_name == 'pull_request' && 'pr-' || '' }}${{ github.event_name == 'pull_request' && github.event.number || inputs.perform_deploy && 'latest' || github.ref == 'refs/heads/main' && 'acceptance' || github.ref == 'refs/heads/develop' && 'testing' }}

  KUBECTL_VERSION: 'v1.31.2'
  DEPLOY_NAMESPACE: ${{ github.event_name == 'push' && 'acceptance' || 'production' }}

jobs:
  determine-environment:
    runs-on: ubuntu-24.04
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
    steps:
      - name: Determine Environment
        id: set-env
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ inputs.perform_deploy }}" == "true" ]]; then
            echo "Determined environment: production"
            echo "environment=production" >> $GITHUB_ENV
            echo "::set-output name=environment::production"
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "Determined environment: acceptance"
            echo "environment=acceptance" >> $GITHUB_ENV
            echo "::set-output name=environment::acceptance"
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "Determined environment: testing"
            echo "environment=testing" >> $GITHUB_ENV
            echo "::set-output name=environment::testing"
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "Determined environment: pr-${{ github.event.number }}"
            echo "environment=pr-${{ github.event.number }}" >> $GITHUB_ENV
            echo "::set-output name=environment::pr-${{ github.event.number }}"
          else
            echo "Determined environment: pull-requests"
            echo "environment=pull-requests" >> $GITHUB_ENV
            echo "::set-output name=environment::pull-requests"
          fi

  build:
    needs: determine-environment
    runs-on: ubuntu-24.04
    environment: ${{ needs.determine-environment.outputs.environment }}
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_TAG }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./SCA-Server
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: false

  deploy-test:
    runs-on: test
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    environment:
      name: testing
      url: https://api-test.pongello.nl/
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: copy paste compose file
        run: |
          scp ./docker/docker-compose.server.yml ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/ansible/compose/
      
      #ssh shit
      - name: Deploy to test server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /home/ansible/compose
            docker compose -f docker-compose.server.yml down
            docker compose -f docker-compose.server.yml up --build -d

  deploy-acceptance:
    runs-on: production-runner
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: acceptance
      url: https://api-beta.pongello.nl/
    steps:
      - uses: azure/setup-kubectl@v4
        with:
          version: ${{ env.KUBECTL_VERSION }}
        id: install

      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Checkout source code
        uses: actions/checkout@v4

      # - uses: Azure/k8s-create-secret@v4
      #   with:
      #      container-registry-url: ghcr.io
      #      container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
      #      container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
      #      secret-name: ghcr-secret

      - name: Deploy to the Kubernetes cluster
        uses: azure/k8s-deploy@v5
        with:
          namespace: ${{ env.DEPLOY_NAMESPACE }}
          manifests: |
            kubernetes/deployment.yml
          images: ghcr.io/fontys-pingmasters/sca-server:${{ env.IMAGE_TAG }}
          # imagepullsecrets: |
          #     ghcr-secret

  deploy-production:
    runs-on: production-runner
    needs: [build]
    if: ${{ inputs.perform_deploy }}
    environment:
      name: production
      url: https://api.pongello.nl/
    steps:
      - uses: azure/setup-kubectl@v4
        with:
          version: ${{ env.KUBECTL_VERSION }}
        id: install

      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Checkout source code
        uses: actions/checkout@v4

      # - uses: Azure/k8s-create-secret@v4
      #   with:
      #       container-registry-url: ghcr.io
      #       container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
      #       container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
      #       secret-name: ghcr-secret

      - name: Deploy to the Kubernetes cluster
        uses: azure/k8s-deploy@v5
        with:
          namespace: ${{ env.DEPLOY_NAMESPACE }}
          manifests: |
            kubernetes/deployment.yml
          images: ghcr.io/fontys-pingmasters/sca-server:${{ env.IMAGE_TAG }}
          # imagepullsecrets: |
          #     ghcr-secret
