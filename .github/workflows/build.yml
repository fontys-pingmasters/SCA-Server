  name: Build docker image

  on:
    # If: Manual trigger
    # Do: Build ':acceptance'
    workflow_dispatch:
      # If: Manual trigger & set to true
      # Do: build ':latest'
      inputs:
        perform_deploy:
          required: true
          type: boolean
          default: false
          description: 'Deploy to production'

    push:
      branches:
        # If: Push to develop
        # Do: Build ':testing'
        - develop
        # If: Push to main
        # Do: Build ':acceptance'
        - main

    pull_request:
      branches:
        # If: Pull request to develop
        # Do: Build ':pr-<id>'
        - develop

  env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}
    IMAGE_TAG: ${{ github.event_name == 'pull_request' && 'pr-' || '' }}${{ github.event_name == 'pull_request' && github.event.number || inputs.perform_deploy && 'latest' || github.ref == 'refs/heads/main' && 'acceptance' || github.ref == 'refs/heads/develop' && 'testing' }}

  jobs:
    build:
      runs-on: ubuntu-24.04
      permissions:
        contents: read
        packages: write
        attestations: write
        id-token: write
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
        - name: Log in to the Container registry
          uses: docker/login-action@v3
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GH_TOKEN }}
        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            tags: ${{ env.IMAGE_TAG }}
        - name: Build and push Docker image
          id: push
          uses: docker/build-push-action@v6
          with:
            context: ./SCA-Server
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
        - name: Generate artifact attestation
          uses: actions/attest-build-provenance@v1
          with:
            subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
            subject-digest: ${{ steps.push.outputs.digest }}
            push-to-registry: true